// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  password     String
  name         String
  avatar       String
  about        String
  expectations String
  linkedin     String
  age          Int
  joinDate     DateTime @default(now())

  userPath   UserPath[]
  userCourse UserCourse[]
}

model Admin {
  id       String @id @default(cuid())
  email    String
  password String

  path   Path[]
  course Course[]
}

model UserPath {
  id  String @id @default(cuid())
  numCoursesCompleted Int
  status              String

  user   User   @relation(fields: [userId], references: [id])
  userId String
  path   Path   @relation(fields: [pathId], references: [id])
  pathId String
}

model Path {
  id         String @id @default(cuid())
  name       String @unique
  numCourses Int

  userPath   UserPath[]
  coursePath CoursePath[]
  admin      Admin        @relation(fields: [adminId], references: [id])
  adminId    String
}

model CoursePath {
  id  String @id @default(cuid())
  numOrder Int

  path     Path   @relation(fields: [pathId], references: [id])
  pathId   String
  course   Course @relation(fields: [courseId], references: [id])
  courseId String
}

model UserCourse {
  id  String @id @default(cuid())
  status          String
  inscriptionDate DateTime @default(now())
  finishDate      DateTime

  Course   Course @relation(fields: [courseId], references: [id])
  courseId String
  user     User   @relation(fields: [userId], references: [id])
  userId   String
}

model Course {
  id          String   @id @default(cuid())
  title       String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  userCourse     UserCourse[]
  courseContents CourseContent[]
  coursePath     CoursePath[]
  admin          Admin           @relation(fields: [adminId], references: [id])
  adminId        String
}

model CourseContent {
  id          String @id @default(cuid())
  name        String
  description String
  typeFile    String
  file        String

  Course   Course @relation(fields: [courseId], references: [id])
  courseId String
}
